import Element.elem

abstract class Element {
  def contents : Array[String]
  def width : Int =
    if (height == 0) 0 else contents(0).length
  def height : Int = conents.length
  def above(that: Element) =
    elem(this.contents ++ that.contents)
  def beside(that: Element) =
    elem(
      for (
        (line1, line2) = this.contents zip that.contents
      ) yield line1 + line2
    )
  override def toString = contents mkString "\n"

}

object Element {
  def elem(contents: Array[String]): Element =
    new ArrayElement(contents)
  def elem(char: Char, width: Int, height: Int): Element =
    new UniformElement(chr, width, height)
  def elem(line: String): Element =
    new LineElement(line)
}

class ArrayElement(
  val contents =  Array[String])
